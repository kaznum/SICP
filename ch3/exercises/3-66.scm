;; from text
(define (interleave s1 s2)
  (if (stream-null? s1)
      s2
      (cons-stream (stream-car s1)
		   (interleave s2 (stream-cdr s1)))))

(define (pairs s t)
  (cons-stream
   (list (stream-car s) (stream-car t))
   (interleave
    (stream-map (lambda (x) (list (stream-car s) x))
		(stream-cdr t))
    (pairs (stream-cdr s) (stream-cdr t)))))

(define (integers-from n)
  (cons-stream n (integers-from (+ n 1))))

(define integers
  (integers-from 1))

(define (show-stream s n)
  (if (zero? n)
      'done
      (begin
	(newline)
	(display (stream-car s))
	(show-stream (stream-cdr s) (- n 1)))))

;; Answer
(define int-pairs (pairs integers integers))

(define (int-positions s p-car current max)
  (let ((p (stream-car s)))
    (if (= current max)
	'done
	(begin
	  (if (= p-car (car p))
	      (begin
		(newline)
		(display current)))
	  (int-positions (stream-cdr s) p-car (+ current 1) max)))))

;; The posibility of an element from the streams which are applied
;; to 'interleave' is one second.
;; The first pair whose values are the same is something special
;; because it is generated by 'cons-stream''s first argument
;; in 'pairs' function.



;; so the number of pairs preceding (1 100) is
;; 1 + (100 - 2) * 2 = 197
;; (for the pair (1 n))
;; The first (1 1): 0
;; the expression: 1 + (n - 2) * 2 (except (1 1))

;; for (2 n),
;; this is interleaved by (3 x),
;; The positions: 2, 4, 8, 12, ..
;; So, the number of preceding pairs of (2 n),
;; The first (2 2): 2
;; The others (n - 2) * (2^2)

;; for (3 n),
;; The positions: 6, 10, 18, 26...
;; The first (3 3): 6
;; The others: 2 + (n - 3) * (2^3)

;; for (4 n),
;; The positions: 14, 22, 38,...
;; The first (4 4): 14
;; The others 6 + (n - 4) * (2^4)     {2^(i-2)}    2+4

;; for (5 n),
;; The positions: 30, 46, 78
;; The first (5 5): 30
;; The others 14 + (n - 5) * (2^5)

;; for (6 n),
;; The positions: 62 94 158
;; The first (6 6): 62
;; The others 30 + (n - 6) * (2^6)

;; for (7 n),
;; The positions: 126, 190, 318
;; The first (7 7): 126
;; The others 62 + (n - 7) * (2^7)


;; for (i n),
;; The first (i i):       2^i - 2
;; The others(for i < n): 2^(i-1) - 2 + (n - i) * (2^i)
;;                        = 2^(i-1) { 2(n-i) + 1 } - 2

;; for (1 100)
;; 197

;; for (99 100)
;; 2^99 + 2^98 - 2

;; for (100 100)
;; 2^100 - 2


;; (appendix) mathematical formula
;; Sigma x^n (a->b) = (x^(b+1) - x^a) / (x - 1)

